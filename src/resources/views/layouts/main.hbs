<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Dữ liệu xã Cẩm Hoàng</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous" />
  <link rel="stylesheet" href="/css/style.css" />
  <link rel="stylesheet" href="/css/ol.css" type="text/css" />
  <link rel="stylesheet" href="/css/ol.css.map" type="text/css" />
  <link rel="stylesheet" href="/libs/v6.9.0/css/ol.css">
  <link rel="stylesheet" href="/css/rawgis.css">
  <link rel="stylesheet" href="/libs/v6.9.0/apidoc/styles/bootstrap.min.css" type="text/css">

  <style>
    .findSearch:hover {
      scale: 1.02;
      box-shadow: 1px 1px 1px 1px #ccc;
    }

    .ol-attribution,
    .ol-attribution:not(.ol-collapsed),
    .ol-attribution.ol-uncollapsible {
      display: none;
    }
  </style>

</head>

<body>


  <div class="main">
    <header>Cẩm Hoàng GIS</header>
    <div class="main-gis">
      <div class="main__gis--left" style="max-width: 250px; justify-content: start;">
        <form style="margin-right: 6px;max-width: 240px;">
          <label for="inputsearch" style="margin-top: 8px;">Nhập mã hoặc tên chủ đất</label>
          <input id="inputsearch" class="form-control" style="margin-top: 2px;" type="text" size="30"
            onkeyup="showResult(this.value)" placeholder="Tìm kiếm" />
          <div id="livesearch"></div>
        </form>
      </div>
      <div class="containerMap" style="flex: 3;width: 100%;position: relative;">
        <div class="map" id="map"></div>
        <div class="main__gis--right" style="position: absolute;bottom: 0;">
          <div class="line1">
            <h3>Vùng</h3>
            <img
              src="http://localhost:8088/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&STRICT=false&style=camhoang:camhoang_style"
              alt="" />
            <!-- Cần thay localhost: cổng của các bạn và Layer= ... -->

            <!-- Link khi mở openlayer ở geoserver có đầy đủ thông tin -->
          </div>
          <div class="line">
            <h3>GT</h3>
            <img
              src="http://localhost:8088/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&STRICT=false&style=camhoang:camhoanggt_style"
              alt="" />
            <!-- Cần thay localhost: cổng của các bạn và Layer= ... -->
          </div>
          <div class="line3">
            <h3>Uỷ ban</h3>
            <img
              src="http://localhost:8088/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&STRICT=false&style=camhoang:camhoangub_style"
              alt="" />
            <!-- Cần thay localhost: cổng của các bạn và Layer= ... -->
          </div>
        </div>

      </div>

    </div>
  </div>
  <div class="ol-popup hide" id="popup">
    <a href="#" class="ol-popup-closer" id="popup-closer">
      <div id="popup-content">
      </div>
    </a>
  </div>

  <script src="/libs/v6.9.0/build/ol.js"></script>
  <script src="/js/rawgis.js"></script>



  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

  {{!--
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script> --}}
  <script src="/libs/v6.9.0/apidoc/scripts/bootstrap.bundle.min.js"></script>

  <script src="/js/ol.js"></script>

  <script src="/js/rawgis.js"></script>
  <script src="/js/search.js" type="text/javascript"></script>
  <script>
    const mapContainer = document.querySelector('#map');
    mapContainer.style.setProperty("--height-map", `${window.innerHeight - 60}px`);
  </script>

  <script>
    var container = document.getElementById("popup");
    var content = document.getElementById("popup-content");
    var closer = document.getElementById("popup-closer");
    var shouldUpdate = true;
    var center = [564350.04, 2317738.2];
    var zoom = 17.4;
    var rotation = 0;

    closer.onclick = function () {
      overlay.setPosition(undefined);
      closer.blur();
      return false;
    };

    ///hien thi lop ban do len web
    var format = "image/png";
    var bounds = [564182.125, 2317466.0, 564514.4375, 2318014.0]; //cần thay ở đường dẫn khi các bạn vào openlayer trong geoserver



    const toggle_ol_popup = (e) => {
      const popup = document.querySelector('#popup');
      if (e) {
        popup.classList.remove('hide');
      }
      else {
        popup.classList.add('hide');
      }
    }
    // Initial map with OSM Basemap
    var osm = new ol.layer.Tile({
      title: 'OpenStreetMap',
      type: 'base',
      visible: true,
      source: new ol.source.OSM()
    });

    // Add other basemaps to map
    var bingRoads = new ol.layer.Tile({
      title: 'Bing Maps—Roads',
      type: 'base',
      visible: false,
      source: new ol.source.BingMaps({
        key: 'AtXIDEb9gSKgDf8R95QcYmYIkhBjdTLPJd_fqz4uSvxNuk3dkqjt6oGLp10A29u0',
        imagerySet: 'Road'
      })
    });

    var bingAerial = new ol.layer.Tile({
      title: 'Bing Maps—Aerial',
      type: 'base',
      visible: false,
      source: new ol.source.BingMaps({
        key: 'AtXIDEb9gSKgDf8R95QcYmYIkhBjdTLPJd_fqz4uSvxNuk3dkqjt6oGLp10A29u0',
        imagerySet: 'Aerial'
      })
    });

    var bingAerialWithLabels = new ol.layer.Tile({
      title: 'Bing Maps—Aerial with Labels',
      type: 'base',
      visible: false,
      source: new ol.source.BingMaps({
        key: 'AtXIDEb9gSKgDf8R95QcYmYIkhBjdTLPJd_fqz4uSvxNuk3dkqjt6oGLp10A29u0',
        imagerySet: 'AerialWithLabels'
      })
    });
    //
    var googleLayerSatellite = new ol.layer.Tile({
      title: "Google Satellite",
      type: 'base',
      visible: false,
      source: new ol.source.XYZ({
        url: 'http://mt1.google.com/vt/lyrs=s&hl=pl&&x={x}&y={y}&z={z}'
      }),
    });

    var geojsonFormat = new ol.format.GeoJSON();

    var vung = new ol.layer.Image({
      title: 'Địa giới hành chính xã Cẩm Hoàng',
      source: new ol.source.ImageWMS({
        ratio: 1,
        url: "http://localhost:8088/geoserver/camhoang/wms", //cần thay url
        params: {
          FORMAT: format,
          VERSION: "1.1.0",
          STYLES: "",
          LAYERS: "camhoang:camhoangdc_1", //cần thay
        },
      }),
    });
    var duong = new ol.layer.Image({
      title: 'Hệ thống giao thông xã Cẩm Hoàng',
      source: new ol.source.ImageWMS({
        ratio: 1,
        url: "http://localhost:8088/geoserver/camhoang/wms", //cần thay
        params: {
          FORMAT: format,
          VERSION: "1.1.0",
          STYLES: "",
          LAYERS: "camhoang:camhoanggt_1", //cần thay
        },
      }),
    });
    var diem = new ol.layer.Image({
      title: 'Hệ thống uỷ ban xã Cẩm Hoàng',
      source: new ol.source.ImageWMS({
        ratio: 1,
        url: "http://localhost:8088/geoserver/camhoang/wms", //cần thay
        params: {
          FORMAT: format,
          VERSION: "1.1.0",
          STYLES: "",
          LAYERS: "camhoang:camhoangub_1", //cần thay
        },
      }),
    });

    var projection = new ol.proj.Projection({
      code: "EPSG: 3405",
      units: "m",
      axisOrientation: "neu",
    });


    var view = new ol.View({
      projection: projection,
      center: center,
      zoom: zoom,
      rotation: rotation,
    });

    // Display basemaps and GIS data in map with basic functions
    var map = new ol.Map({
      target: document.getElementById('map'),
      layers: [
        new ol.layer.Group({
          title: 'Bản đồ nền',
          layers: [googleLayerSatellite, bingAerialWithLabels, bingAerial, bingRoads, osm],
        }),
        new ol.layer.Group({
          title: 'Dữ liệu địa lý',
          layers: [vung, duong, diem],
          view: new ol.View({
            center: ol.proj.fromLonLat([105.621, 20.958]),
            zoom: 17
          })
        })
      ],
      view: view,
      controls: ol.control.defaults().extend([
        new ol.control.ScaleLine(),
        new ol.control.FullScreen(),
        new ol.control.OverviewMap({ layers: [googleLayerSatellite, bingAerialWithLabels, bingAerial, bingRoads, osm] }),
        new ol.control.MousePosition({
          coordinateFormat: ol.coordinate.createStringXY(3),
          projection: projection
        })
      ])
    });

    // Functions
    var layerSwitcher = new ol.control.LayerSwitcher({});
    map.addControl(layerSwitcher);

    // Add popup


    var overlay = new ol.Overlay({
      element: document.getElementById('popup'),
      autoPan: true,
      autoPanAnimation: {
        duration: 250,
      },
    });
    const element = overlay.getElement();

    map.addOverlay(overlay);

    //code tim kiem doi tuong
    if (window.location.hash !== "") {
      var hash = window.location.hash.replace("#map=", "");
      var parts = hash.split("/");

      if (parts.length === 4) {
        zoom = parseInt(parts[0], 10);
        center = [parseFloat(parts[1]), parseFloat(parts[2])];
        rotation = parseFloat(parts[3]);
      }
    }
    // Hiển thị nổi bật đối tượng được chọn dang vùng:
    var styles = {
      MultiPolygon: new ol.style.Style({
        stroke: new ol.style.Stroke({
          color: "red",
          width: 5,
        }),
      }),
    };

    var styleFunction = function (feature) {
      return styles[feature.getGeometry().getType()];
    };

    var vectorLayer = new ol.layer.Vector({
      style: styleFunction,
    });

    map.addLayer(vectorLayer);

    map.on("singleclick", function (evt) {

      const viewr = map.getView();
      const viewResolution = viewr.getResolution();
      const source = vung.getSource();
      const url = source.getFeatureInfoUrl(
        evt.coordinate,
        viewResolution,
        viewr.getProjection(),
        { INFO_FORMAT: "application/json", FEATURE_COUNT: 50 }
      );
      console.log(viewr)
      console.log(viewResolution)
      console.log(url)
      if (url) {
        $.ajax({
          type: "POST",
          url: url,
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function (response) {
            const data = response.features[0]?.properties
            console.log(data)
            if (data) {
              const content = `<p>
                                  Mã vùng: ${data.txtmemo} </br> 
                                  Diện tích: ${parseFloat(data.shape_area).toFixed(2)}m\u00B2 </br>
                                  Chủ sở hữu: ${data.chusd}
                                </p>`

              $("#popup-content").html(content);
              overlay.setPosition(evt.coordinate);
              toggle_ol_popup(true);
              // 4. Hieenr thi noi bat doi tuong duocj chon dang vung: camhoangdc
              const vectorSource = new ol.source.Vector({
                features: new ol.format.GeoJSON().readFeatures(response),
              });
              vectorLayer.setSource(vectorSource);
            }
            else {
              vectorLayer.setSource(undefined);
              toggle_ol_popup(false);
            }
          },
          error: (err) => {
            toggle_ol_popup(false);
          }
        });
      }

    });

    var updatePermalink = function () {
      if (!shouldUpdate) {
        // do not update the url when the view was changed
        shouldUpdate = true;
        return;
      }

      var center = view.getCenter();
      var hash =
        "#map=" +
        view.getZoom() +
        "/" +
        Math.round(center[0] * 100) / 100 +
        "/" +
        Math.round(center[1] * 100) / 100 +
        "/" +
        view.getRotation();
      var state = {
        zoom: view.getZoom(),
        center: view.getCenter(),
        rotation: view.getRotation(),
      };

      window.history.pushState(state, "map", hash);
    };

    map.on("moveend", updatePermalink);

    window.addEventListener("popstate", function (event) {
      if (event.state === null) {
        return;
      }

      map.getView().setCenter(event.state.center);
      map.getView().setZoom(event.state.zoom);
      map.getView().setRotation(event.state.rotation);
      shouldUpdate = false;
    });
    function di_den_diem(x, y, xtb, ytb) {
      toggle_ol_popup(false);
      const taodo = [parseFloat(xtb), parseFloat(ytb)]
      setTimeout(() => {
        const viewr = map.getView();
        const viewResolution = viewr.getResolution();
        const source = vung.getSource();
        const url = source.getFeatureInfoUrl(
          taodo,
          viewResolution,
          viewr.getProjection(),
          { INFO_FORMAT: "application/json", FEATURE_COUNT: 50 }
        );
        console.log(url)
        if (url) {
          $.ajax({
            type: "POST",
            url: url,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
              const data = response.features[0]?.properties
              console.log(data)
              const content = `<p>
                                Mã vùng: ${data.txtmemo} </br> 
                                Diện tích: ${parseFloat(data.shape_area).toFixed(2)}m\u00B2 </br>
                                Chủ sở hữu: ${data.chusd}
                              </p>`

              $("#popup-content").html(content);
              toggle_ol_popup(true);
              // 4. Hieenr thi noi bat doi tuong duocj chon dang vung: camhoangdc
              const vectorSource = new ol.source.Vector({
                features: new ol.format.GeoJSON().readFeatures(response),
              });
              vectorLayer.setSource(vectorSource);

            },
            error: (err) => {
              toggle_ol_popup(false);
            }
          });
        }
      }, 1000)
      overlay.setPosition(taodo);
      const vi_tri = ol.proj.fromLonLat(taodo, projection);
      view.animate({
        center: vi_tri,
        duration: 900,
        zoom: 20,
      });
    }


  </script>


  <script>
    const main__gis = document.querySelector('.main__gis--right');
    const widthMain = $(".main__gis--right")[0].offsetWidth - 3
    main__gis.style.setProperty('--before-width', `${widthMain}px`);
  </script>

  <script src="https://cdn.jsdelivr.net/npm/elm-pep@1.0.6/dist/elm-pep.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>

</body>

</html>